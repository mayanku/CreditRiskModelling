str(loan_data)
library(readxl)
train_u6lujuX_CVtuZ9i <- read_excel("C:/Users/Mayank/Downloads/train_u6lujuX_CVtuZ9i.csv")
View(train_u6lujuX_CVtuZ9i)
library(readr)
train_u6lujuX_CVtuZ9i <- read_csv("C:/Users/Mayank/Downloads/train_u6lujuX_CVtuZ9i.csv")
View(train_u6lujuX_CVtuZ9i)
View(train_u6lujuX_CVtuZ9i)
str(train_u6lujuX_CVtuZ9i)
View(train_u6lujuX_CVtuZ9i)
loan_data<-train_u6lujuX_CVtuZ9i
str(loan_data)
library(gmodels)
install.packages("gmodels")
library(gmodels)
CrossTable(loan_data$Loan_Status)
hist1<- hist(loan_data$Loan_Status)
hist1<- hist(loan_data$LoanAmount)
hist1$breaks
hist2<-hist(loan_data$LoanAmount,breaks=100)
hist2<-hist(loan_data$LoanAmount,breaks=5)
hist2<-hist(loan_data$LoanAmount,breaks=7)
hist2<-hist(loan_data$LoanAmount,breaks=10)
plot(loan_data$ApplicantIncome)
which(loan_data$ApplicantIncome>6000)
which(loan_data$ApplicantIncome>60000)
which(loan_data$ApplicantIncome>50000)
which(loan_data$ApplicantIncome>40000)
which(loan_data$ApplicantIncome>30000)
which(loan_data$ApplicantIncome>20000)
highcalue<-which(loan_data$ApplicantIncome>30000)
new_data<-loan_data[-highcalue,]
plot(loan_data$ApplicantIncome)
plot(new_data$ApplicantIncome)
View(new_data)
plot(new_data$CoapplicantIncome)
highcoapplicant<-which(new_data$CoapplicantIncome>20000)
which(new_data$CoapplicantIncome>20000)
new_data<-new_data[-highcoapplicant,]
plot(new_data$LoanAmount)
which(is.na(new_data$LoanAmount))
which(is.na(new_data$ApplicantIncome))
which(is.na(new_data$CoapplicantIncome))
na_index<-which(is.na(new_data$LoanAmount))
which(is.na(new_data$Loan_Amount_Term))
new_data<-new_data[-na_index,]
median_ir<-median(loan_data$Loan_Amount_Term)
median_ir
median_ir<-median(loan_data$Loan_Amount_Term)
median(loan_data$Loan_Amount_Term)
median(loan_data$Loan_Amount_Term,na.rm=TRUE)
median_ir<-median(loan_data$Loan_Amount_Term,na.rm=TRUE)
na_termindex<-which(is.na(new_data$Loan_Amount_Term))
na_termindex<-360
na_termindex<-which(is.na(new_data$Loan_Amount_Term))
na_termindex
new_data$Loan_Amount_Term[na_termindex]<-360
median(loan_data$Loan_Amount_Term)
median(new_data$Loan_Amount_Term)
summary(new_data)
summary(new_data$Loan_Amount_Term)
library(readr)
test_set <- read_csv("C:/Users/Mayank/Downloads/test_Y3wMUE5_7gLdaTN.csv")
View(test_set)
glmamount<- glm(formula = loan_data$Loan_Status,family = "binomial",data = new_data)
library(readr)
test_set <- read_csv("C:/Users/Mayank/Downloads/test_Y3wMUE5_7gLdaTN.csv")
View(test_set)
glmamount<- glm(formula = loan_data$Loan_Status,family = "binomial",data = new_data)
glmamount<- glm(formula = ,family = "binomial",data = new_data)
summary(new_data)
str(new_data)
log_predict<-glm(formula = Loan_Status ~ ApplicantIncome , family = "binomial",data=new_data )
which(is."Y"(new_data$Loan_Status))
which(is.Y(new_data$Loan_Status))
which(new_data$Loan_Status="Y")
which(new_data$Loan_Status =="Y")
convYto1<-which(new_data$Loan_Status =="Y")
new_data$Loan_Status[convYto1]<-1
convYto0<-which(new_data$Loan_Status =="N")
new_data$Loan_Status[convYto0]<-0
str(new_data)
log_predict<-glm(formula = Loan_Status ~ ApplicantIncome , family = "binomial",data=new_data )
log_predict<-glm(formula = Loan_Status ~ ApplicantIncome , family = "binomial",data=new_data )
log_predict<-glm( formula = Loan_Status ~ ApplicantIncome , family = "binomial",data=new_data )
log_predict<-glm( formula = Credit_History ~ ApplicantIncome , family = "binomial",data=new_data )
log_predict
log_predict<-glm( formula = Loan_Status ~ ApplicantIncome , family = "binomial",data=new_data )
is.foo(new_data$Loan_Status)
new_data$Loan_Status.is.foo
as.numeric(as.character(new_data$Loan_Status))
log_predict<-glm( formula = Loan_Status ~ ApplicantIncome , family = "binomial",data=new_data )
new_data$Loan_Status<-as.numeric(as.character(new_data$Loan_Status))
log_predict<-glm( formula = Loan_Status ~ ApplicantIncome , family = "binomial",data=new_data )
log_predict
View(new_data)
View(new_data)
log_predict<-glm( formula = Loan_Status ~ . , family = "binomial",data=new_data )
log_predict<-glm( formula = Loan_Status ~. , family = "binomial",data=new_data )
log_predict
log_predict<-glm( formula = Loan_Status ~ Dependents , family = "binomial",data=new_data )
log_predict
log_predict<-glm( formula = Loan_Status ~ Dependents + ApplicantIncome, family = "binomial",data=new_data )
log_predict
log_predict<-glm( formula = Loan_Status ~ Dependents + ApplicantIncome + CoapplicantIncome, family = "binomial",data=new_data )
log_predict
log_predict<-glm( formula = Loan_Status ~ Dependents + ApplicantIncome + CoapplicantIncome + Education, family = "binomial",data=new_data )
log_predict
log_predict<-glm( formula = Loan_Status ~ Dependents + ApplicantIncome + CoapplicantIncome + Education + Self_Employed, family = "binomial",data=new_data )
log_predict
log_predict<-glm( formula = Loan_Status ~ Self_Employed, family = "binomial",data=new_data )
log_predict
log_predict<-glm( formula = Loan_Status ~ Married, family = "binomial",data=new_data )
log_predict
str(loan_data)
log_predict
log_predict<-glm( formula = Loan_Status ~ Married + Education, family = "binomial",data=new_data )
log_predict
log_predict<-glm( formula = Loan_Status ~ Married + Education + Property_Area, family = "binomial",data=new_data )
log_predict
log_predict<-glm( formula = Loan_Status ~ Married + Education + Property_Area + LoanAmount, family = "binomial",data=new_data )
log_predict
log_predict<-glm( formula = Loan_Status ~ Married + Education + Property_Area + LoanAmount + Gender, family = "binomial",data=new_data )
log_predict
log_predict<-glm( formula = Loan_Status ~ Married + Education + Property_Area + LoanAmount + Gender + Dependents, family = "binomial",data=new_data )
log_predict
log_predict<-glm( formula = Loan_Status ~ Married + Education + Property_Area + LoanAmount + Gender + Dependents, family = "binomial",data=new_data )
summary(log_predict)
log_predict<-glm( formula = Loan_Status ~ Married + Education + Property_Area + LoanAmount + Gender + Dependents, family = "binomial",data=new_data )
summary(log_predict)
log_predict<-glm( formula = Loan_Status ~ Married + Education + Property_Area + LoanAmount + Gender + Dependents + Self_Employed + ApplicantIncome + CoapplocantIncome + Loan_Amount_Term + Credit_History, family = "binomial",data=new_data )
log_predict<-glm( formula = Loan_Status ~ Married + Education + Property_Area + LoanAmount + Gender + Dependents + Self_Employed + ApplicantIncome + CoapplicantIncome + Loan_Amount_Term + Credit_History, family = "binomial",data=new_data )
summary(log_predict)
prediction<-predict(log_predict, newdata = test_set ,type="response")
range(prediction)
View(test_set)
trai<- test_set[1]
trai
test_case<-as.data.frame(test_set[1,])
prediction<-predict(log_predict, newdata = test_case ,type="response")
range(prediction)
summary(log_predict)
log_predict<-glm( formula = Loan_Status ~ Married + Education + Property_Area + LoanAmount + Gender + Dependents + Self_Employed + ApplicantIncome + CoapplicantIncome + Loan_Amount_Term + Credit_History, family = "binomial",data=new_data )
log_predict
prediction<-predict(log_predict, newdata = test_case ,type="response")
prediction
new_data
which(is.na(new_data$Dependents))
which(is.na(new_data$Gender))
which(is.na(new_data$Self_Employed))
which(is.na(new_data$ApplicantIncome))
which(is.na(new_data$Married))
which(is.na(new_data$Loan_Amount_Term)
)
which(is.na(new_data$LoanAmount))
which(is.na(new_data$Credit_History))
new_data
log_predict<-glm( formula = Loan_Status ~ Married + Education + Property_Area + LoanAmount + Gender + Dependents + Self_Employed + ApplicantIncome + CoapplicantIncome + Loan_Amount_Term + Credit_History, family = "binomial",data=new_data )
log_predict
which(is.na(new_data$Gender))
new_data
summary(new_data)
which(is.na(new_data$Gender))
removeempty<-which(is.na(new_data$Gender))
removeempty
new_data<-new_data[- removeempty,]
str(new_data)
removeempty<-which(is.na(new_data$Married))
new_data<-new_data[- removeempty,]
removeempty<-which(is.na(new_data$Dependents))
new_data<-new_data[- removeempty,]
removeempty<-which(is.na(new_data$Education))
new_data<-new_data[- removeempty,]
removeempty<-which(is.na(new_data$Self_Employed))
new_data<-new_data[- removeempty,]
new_data
View(new_data)
View(new_data)
View(new_data)
View(log_predict)
View(loan_data)
View(new_data)
View(new_data)
View(train_u6lujuX_CVtuZ9i)
View(train_u6lujuX_CVtuZ9i)
new_data<-train_u6lujuX_CVtuZ9i
removeempty<-which(is.na(new_data$Gender))
new_data<-new_data[- removeempty,]
removeempty<-which(is.na(new_data$Married))
new_data<-new_data[- removeempty,]
removeempty<-which(is.na(new_data$Deppendents))
removeempty<-which(is.na(new_data$Dependents))
new_data<-new_data[- removeempty,]
removeempty<-which(is.na(new_data$Education))
removeempty<-which(is.na(new_data$Self_Employed))
new_data<-new_data[- removeempty,]
removeempty<-which(is.na(new_data$ApplicantIncome))
removeempty<-which(is.na(new_data$CoapplicantIncome))
new_data<-new_data[- removeempty,]
new_data<-train_u6lujuX_CVtuZ9i
removeempty<-which(is.na(new_data$CoapplicantIncome))
removeempty<-which(is.na(new_data$Self_Employed))
new_data<-new_data[- removeempty,]
removeempty<-which(is.na(new_data$Education))
removeempty<-which(is.na(new_data$Dependents)
removeempty<-which(is.na(new_data$Dependents))
removeempty<-which(is.na(new_data$Dependents))
new_data<-new_data[- removeempty,]
removeempty<-which(is.na(new_data$Education))
removeempty<-which(is.na(new_data$Married))
removeempty<-which(is.na(new_data$Gender))
new_data<-new_data[- removeempty,]
removeempty<-which(is.na(new_data$Gender))
removeempty<-which(is.na(new_data$Married))
removeempty<-which(is.na(new_data$Dependents))
removeempty<-which(is.na(new_data$Education))
removeempty<-which(is.na(new_data$Self_Employed))
removeempty<-which(is.na(new_data$ApplicantIncome))
removeempty<-which(is.na(new_data$CoApplicantIncome))
removeempty<-which(is.na(new_data$CoapplicantIncome))
removeempty<-which(is.na(new_data$LoanAmount))
new_data<-new_data[- removeempty,]
removeempty<-which(is.na(new_data$Loan_Amount_Term))
new_data<-new_data[- removeempty,]
removeempty<-which(is.na(new_data$Credit_History))
new_data<-new_data[- removeempty,]
removeempty<-which(is.na(new_data$Property_Area))
removeempty<-which(is.na(new_data$Loan_Status))
str(new_data)
log_predict<-glm( formula = Loan_Status ~ Married + Education + Property_Area + LoanAmount + Gender + Dependents + Self_Employed + ApplicantIncome + CoapplicantIncome + Loan_Amount_Term + Credit_History, family = "binomial",data=new_data )
log_predict<-glm( formula = Loan_Status ~ Married + Education + Property_Area + LoanAmount + Gender + Dependents + Self_Employed + ApplicantIncome + CoapplicantIncome + Loan_Amount_Term + Credit_History, family = "binomial",data=new_data )
log_predict<-glm( formula = Loan_Status ~ Married + Education + Property_Area + LoanAmount + Gender + Dependents + Self_Employed + ApplicantIncome + CoapplicantIncome + Loan_Amount_Term + Credit_History, family ="binomial",data=new_data )
log_p<-glm(formula = Loan_Status ~ ApplicantIncome, family = "binomial", data=new_data)
new_data$Loan_Status=="Y"
convYto1<-which(new_data$Loan_Status =="Y")
new_data$Loan_Status[convYto1]<-1
convYto0<-which(new_data$Loan_Status =="N")
new_data$Loan_Status[convYto0]<-0
as.numeric(as.character(new_data$Loan_Status))
log_predict<-glm( formula = Loan_Status ~ Married + Education + Property_Area + LoanAmount + Gender + Dependents + Self_Employed + ApplicantIncome + CoapplicantIncome + Loan_Amount_Term + Credit_History, family ="binomial",data=new_data )
as.numeric(as.character(new_data$Loan_Status))
View(new_data)
View(new_data)
log_predict<-glm( formula = Loan_Status ~ Married + Education + Property_Area + LoanAmount + Gender + Dependents + Self_Employed + ApplicantIncome + CoapplicantIncome + Loan_Amount_Term + Credit_History, family ="binomial",data=new_data )
log_p<-glm(formula = Loan_Status ~ ApplicantIncome, family = "binomial", data=new_data)
summary(new_data$Loan_Status)
as.numeric(as.character(new_data$Loan_Status))
summary(new_data$Loan_Status)
as.character(as.numeric(new_data$Loan_Status))
log_p<-glm(formula = Loan_Status ~ ApplicantIncome, family = "binomial", data=new_data)
as.numeric(as.character(new_data$Loan_Status))
log_p<-glm(formula = Loan_Status ~ ApplicantIncome, family = "binomial", data=new_data)
new_data$Loan_Status<-as.numeric(as.character(new_data$Loan_Status))
log_p<-glm(formula = Loan_Status ~ ApplicantIncome, family = "binomial", data=new_data)
log_p
log_predict<-glm( formula = Loan_Status ~ Married + Education + Property_Area + LoanAmount + Gender + Dependents + Self_Employed + ApplicantIncome + CoapplicantIncome + Loan_Amount_Term + Credit_History, family ="binomial",data=new_data )
log_predict
?quantile
?rep
